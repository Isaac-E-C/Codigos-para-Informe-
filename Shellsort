#include <iostream>
#include <chrono>
#include <cstdlib>
using namespace std;
using namespace std::chrono;

long long comparaciones = 0;
long long asignaciones = 0;

void generarDatos(int* array, int tam, int tipo)
{
    switch (tipo)
    {
    case 1: 
        for (int i = 0; i < tam; i++)
            array[i] = i + (i % 5);
        break;
    case 2: 
        for (int i = 0; i < tam; i++)
            array[i] = tam - i;
        break;
    case 3: 
        for (int i = 0; i < tam; i++)
            array[i] = (i * 7919 + 12345) % (tam * 2);
        break;
    }
}

void imprimirArray(int* array, int tam)
{
    for (int i = 0; i < tam; i++)
        cout << array[i] << " ";
    cout << endl;
}

void shellSort(int* array, int n)
{
    for (int gap = n / 2; gap > 0; gap /= 2)
    {
        for (int i = gap; i < n; i++)
        {
            int temp = array[i];
            int j;
            asignaciones++; 

            for (j = i; j >= gap && array[j - gap] > temp; j -= gap)
            {
                comparaciones++;
                array[j] = array[j - gap];
                asignaciones++;
            }

            if (j >= gap) comparaciones++; 
            array[j] = temp;
            asignaciones++;
        }
    }
}

int main()
{
    int tam, tipo;
    cout << "Tamaño del arreglo (100, 1000, 10000): ";
    cin >> tam;

    cout << "Tipo de datos:\n";
    cout << "1. Casi ordenado\n2. Reverso\n3. Aleatorio\nSeleccione opción: ";
    cin >> tipo;

    int* datos = new int[tam];
    generarDatos(datos, tam, tipo);

    cout << "\nArreglo original:\n";
    imprimirArray(datos, tam);

    auto inicio = high_resolution_clock::now();
    shellSort(datos, tam);
    auto fin = high_resolution_clock::now();

    long long duracion = duration_cast<microseconds>(fin - inicio).count();

    cout << "\nArreglo ordenado:\n";
    imprimirArray(datos, tam);

    cout << "\nTiempo de ordenamiento (Shell Sort): " << duracion << " microsegundos\n";
    cout << "Comparaciones: " << comparaciones << "\n";
    cout << "Asignaciones: " << asignaciones << "\n";

    delete[] datos;
    return 0;
}
